# name: CI Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:16
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: criti-pixel_test
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       DATABASE_URL: "postgresql://postgres:postgres@127.0.0.1:5432/criti-pixel_test?serverVersion=16&charset=utf8"
#       APP_ENV: test
#       APP_SECRET: '$ecretf0rt3st'
#       SYMFONY_DEPRECATIONS_HELPER: 999999

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: '8.2'
#           extensions: mbstring, pdo_pgsql, intl
#           ini-values: post_max_size=256M, upload_max_filesize=256M
#           coverage: none

#       - name: Install Composer dependencies
#         run: composer install --prefer-dist --no-interaction --no-progress

#       - name: Install Symfony CLI
#         run: |
#             curl -sS https://get.symfony.com/cli/installer | bash
#             mv ~/.symfony*/bin/symfony /usr/local/bin/symfony
        
#       - name: Setup test database and fixtures
#         run: |
#           php bin/console doctrine:database:create --env=test --if-not-exists
#           php bin/console doctrine:migrations:migrate --no-interaction --env=test
#           php bin/console doctrine:fixtures:load --no-interaction --purge-with-truncate --env=test

#       - name: Run tests
#         run: composer test

#       - name: Static analysis (PHPStan)
#         run: vendor/bin/phpstan analyse --no-progress

#       - name: Code style (PHP-CS-Fixer dry run)
#         run: vendor/bin/php-cs-fixer fix --dry-run --diff || true

name: Continuous integration
on: [push]
jobs:
  ci:
    name: Continuous Integration
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.2', '8.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          tools: castor
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Build
        run: |
          docker compose -f "docker-compose.yml" up -d --build
          composer install
          php bin/console doctrine:database:drop -f --if-exists --env=test
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:migrations:migrate -n --env=test
          php bin/console doctrine:fixtures:load -n --purge-with-truncate --env=test
          php bin/console sass:build
      - name: Tests
        run: php bin/phpunit
      - name: Analysis
        run: php vendor/bin/phpstan