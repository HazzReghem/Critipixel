name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: criti-pixel_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgresql://postgres:postgres@127.0.0.1:5432/criti-pixel_test?serverVersion=16&charset=utf8"
      APP_ENV: test
      APP_SECRET: '$ecretf0rt3st'
      SYMFONY_DEPRECATIONS_HELPER: 999999
      APP_URL: "http://127.0.0.1:9080"
      PANTHER_CHROME_BINARY: "/usr/bin/google-chrome"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_pgsql, intl
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Install Symfony CLI
        run: |
            curl -sS https://get.symfony.com/cli/installer | bash
            mv ~/.symfony*/bin/symfony /usr/local/bin/symfony

      - name: Install Panther dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libxss1 libasound2 libatk1.0-0 libgtk-3-0 libgbm1

    
      - name: Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
  
      - name: Run Symfony server in background
        run: |
          symfony server:start --port=9080 --daemon

      - name: Wait for Symfony server
        run: |
          for i in {1..30}; do
            if curl -sSf http://127.0.0.1:9080 > /dev/null; then
              echo "Server is up!"
              break
            fi
            echo "Waiting for Symfony server..."
            sleep 1
          done    
    
      - name: Setup test database and fixtures
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:migrations:migrate --no-interaction --env=test
          php bin/console doctrine:fixtures:load --no-interaction --purge-with-truncate --env=test

      # - name: Start Symfony web server
      #   run: |
      #     symfony server:start --port=8000 --dir=public --daemon

      # - name: Set test base URL
      #   run: echo "APP_URL=http://127.0.0.1:8000" >> .env.test

      - name: Run tests
        run: composer test

      - name: Static analysis (PHPStan)
        run: vendor/bin/phpstan analyse --no-progress

      - name: Code style (PHP-CS-Fixer dry run)
        run: vendor/bin/php-cs-fixer fix --dry-run --diff || true
